version: 2.1

executors:
  docker-executor:
    docker:
      - image: ankrnetwork/alpine:v1.0.0
  machine-executor:
    machine: true

commands:
  kubeconfig:
    steps:
      - run:
          name: copy kubeconfig to base image
          command: data=$(cat /root/.kube/oentext ); crypt aes -k=$kubekey -e=false -d=$data > /root/.kube/config

  deploy:
    steps:
      - run:
          name: deploy
          command: kubectl apply -f deployment/

jobs:
  build-with-machine:
    executor: machine-executor
    steps:
      - checkout
      - run: docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_TOKEN
      - run: make docker-push

  deploy-stage:
    executor: docker-executor
    working_directory: /tmp/project
    steps:
      - checkout
      - kubeconfig
      - run:
          name: swith stage.hub
          command: kubectl config use-context stage.hub.k8s.ankr.network
      - run:
          name: Modify deploy yaml
          command: |
            SHA1_SHORT=$(git rev-parse --short HEAD)
            for i in $(ls ./deployment/); do
              sed -i 's/{{ replicaCount }}/1/g' ./deployment/$i
              sed -i "s/{{ tag }}/$SHA1_SHORT/g" ./deployment/$i
            done
      - deploy

  deploy-prod:
    executor: docker-executor
    working_directory: /tmp/project
    steps:
      - checkout
      - kubeconfig
      - run:
          name: swith hub
          command: kubectl config use-context hub.k8s.ankr.network
      - run:
          name: Modify deploy yaml
          command: |
            SHA1_SHORT=$(git rev-parse --short HEAD)
            for i in $(ls ./deployment/); do
              sed -i 's/{{ replicaCount }}/2/g' ./deployment/$i
              sed -i "s/{{ tag }}/$SHA1_SHORT/g" ./deployment/$i
            done
      - deploy

workflows:
  version: 2
  build-deploy:
    jobs:
      - build-with-machine:
          context: cicd
          filters:
            branches:
              ignore:
                - /feature\/.*/
      - deploy-stage:
          context: cicd
          requires:
            - build-with-machine
          filters:
            branches:
              only: develop
      - deploy-prod:
          context: cicd
          requires:
            - build-with-machine
          filters:
            branches:
              only: master
